# ============================================================================
# Workflow: Excel → JSON Automation (Simplified)
# Purpose : Test YAML syntax and confirm end-to-end run without email section.
# ============================================================================

name: Excel → JSON Update (Simplified)

on:
  workflow_dispatch:
    inputs:
      MAX_RUN_TIME_MINUTES:
        description: "Max run time in minutes for this run (0 = no time limit)"
        default: "300"
        required: false
      MAX_PER_RUN:
        description: "Limit number of shows to process (0 = process all)"
        default: "0"
        required: false
  schedule:
    - cron: "30 18 * * 6"  # Every Sunday 00:00 AM IST (Saturday 18:30 UTC)

jobs:
  update-json:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write Excel file ID
        run: echo "${{ secrets.EXCEL_FILE_ID }}" > EXCEL_FILE_ID.txt

      - name: Write Google Drive service account
        run: echo '${{ secrets.GDRIVE_SERVICE_ACCOUNT }}' > GDRIVE_SERVICE_ACCOUNT.json

      # ------------------ Run updater and capture report ------------------
      - name: Run Excel→JSON updater
        id: run_updater
        env:
          EVENT_NAME: ${{ github.event_name }}
          GITHUB_PAGES_URL: https://brucebanner001.github.io/my-movie-database
          MAX_PER_RUN: ${{ github.event.inputs.MAX_PER_RUN || 0 }}
          MAX_RUN_TIME_MINUTES: ${{ github.event.inputs.MAX_RUN_TIME_MINUTES || 300 }}
          KEEP_OLD_IMAGES_DAYS: 7
          SCHEDULED_RUN: ${{ github.event_name == 'schedule' && 'true' || 'false' }}
        run: |
          set -euo pipefail
          output=$(python create_update_backup_delete.py 2>&1 || true)
          printf '%s\n' "$output"

          report_path=$(printf '%s\n' "$output" | awk -F'→' '/Report written/ {gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2; exit}')
          if [ -z "$report_path" ] || [ ! -f "$report_path" ]; then
            report_path=$(ls -t reports/report_*.txt 2>/dev/null | head -n1 || true)
          fi

          echo "report_path=$report_path" >> $GITHUB_OUTPUT

      # ------------------ Commit and Push Changes ------------------
      - name: Commit & push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add seriesData.json images/ backups/ reports/ deleted-data/ || true
          git commit -m "Automated update: $(date -u '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push

      # ------------------ Upload Reports ------------------
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-reports
          path: reports/

      # ------------------ Scan for Secrets ------------------
      - name: Scan for secrets
        if: always()
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=. --report-path=reports/secrets_report.txt --no-banner --redact

      # ------------------ End of Simplified Workflow ------------------
